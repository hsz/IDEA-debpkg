name=Debian Packaging Support
deb822.files.inspection.issue.duplicate.field_names=Duplicate field name {0}
dctrl.inspection.group.display.name=Debian Control inspections
deb822.files.inspection.name.duplicate_field.display.name=Duplicate field inspection
deb822.files.annotator.fields.unknown.value=Unknown value for field.
deb822.files.annotator.fields.arch-all-multi-arch-same=The "Multi-Arch" field cannot be "same" when "Architecture" is "all".  Either it should be changed to "foreign" or the Architecture field should be changed.
deb822.files.quickfix.fields.arch-all-multi-arch-same.name=Set Multi-arch field to "foreign"
deb822.files.quickfix.fields.arch-all-multi-arch-same.description=The Multi-Arch value "same" only applies to Architecture dependent packages.  For architecture independent packages, Multi-Arch should generally be set to "no" or "foreign"

deb822.files.annotator.fields.priority-extra-is-obsolete=The priority value "extra" is now a deprecated alias of "optional".
deb822.files.quickfix.fields.priority-extra-is-obsolete.name=Set priority to optional
deb822.files.quickfix.fields.priority-extra-is-obsolete.description=The priority value "extra" is now a deprecated alias of "optional".
deb822.files.annotator.fields.substvars.not.supported=The field does not support substvars (${...}).  This is typically because the field value is needed early in the build process.
deb822.files.annotator.fields.empty.list.value=Field contains an empty element (typically caused by having two commas following each other)
deb822.files.annotator.fields.value-is-exclusive=The value "{0}" must appear on its own when used in "{1}".  Either remove it or all other values.
deb822.files.annotator.fields.field-is-single-value-field=The field is a single value field but appears to be containing multiple values separated by space or comma.

deb822.files.annotator.fields.field-is-unnecessary-when-value-is-default=The value "{0}" is the default for "{1}" and it is usually not worth the bytes to declare it explicitly for this field.  Please remove the field.
deb822.files.quickfix.fields.field-is-unnecessary-when-value-is-default.name=Delete field
deb822.files.quickfix.fields.field-is-unnecessary-when-value-is-default.description=The field is set to its default value and is customarily omitted because there is no need to explicitly declare this default value.


deb822.files.annotator.fields.field-does-not-belong-in-paragraph=The field "{0}" does not belong in a "{1}"-paragraph.
deb822.files.quickfix.fields.field-does-not-belong-in-paragraph.name=Delete field
deb822.files.quickfix.fields.field-does-not-belong-in-paragraph.description=The field does not belong in this paragraph.


deb822.files.annotator.fields.missing-mandatory-field=The paragraph is missing the mandatory field "{0}"


deb822.files.annotator.fields.unknown-version-operator-in-dependency=The version operator "{0}" is not supported; supported operators are "<<", "<=", "=", ">=", ">>"


deb822.files.annotator.fields.incorrect-version-operator-in-dependency-with-known-replacement=The version operator "{0}" is invalid (or now obsolete); Its replacement is "{1}".
deb822.files.quickfix.fields.incorrect-version-operator-in-dependency-with-known-replacement.name=Replace operator with supported version
deb822.files.quickfix.fields.incorrect-version-operator-in-dependency-with-known-replacement.description=The operator is not supported.


deb822.invalid-version-number=Invalid version {0}; it must match the regex (?:[0-9]+:)?[0-9][a-z0-9.+~]*([-][a-z0-9.+~-]+)?.
deb822.probably-incorrect-substvar-used-as-version=The substvar {0} is used as a replacement for a version, but the concrete variable is not intended for this purpose.
deb822.invalid-package-name=Invalid name for package {0}; it must match the regex [a-z0-9][a-z0-9.+-]+
deb822.probably-incorrect-substvar-used-as-package-name=The substvar {0} is used as a replacement for a package name, but the concrete variable is not intended for this purpose.
deb822.files.annotator.fields.unsupported-version-operator-in-field=The version operator {0} cannot be used in the field {1}.  The following operators are available: {2}
deb822.files.annotator.fields.dependency-field-does-not-support-build-profile=It is not possible to use a build profile restriction (<...>) in the field {0}.


deb822.files.suggested-field.source-missing-rules-requires-root=No Rules-Requires-Root field.

deb822.files.quickfix.fields.source-add-rules-requires-root-to-no.name=Set Rules-Requires-Root field to "no"
deb822.files.quickfix.fields.source-add-rules-requires-root-to-no.description=Adds a Rules-Requires-Root field and set it to "no".  Many modern packages support this out of the box with no or little changes. It causes the package to be built without (fake)root.  In most cases, the benefits are minor, but occasionally fakeroot has pathological performance behaviour that can be avoided with this option.

deb822.files.quickfix.fields.source-add-rules-requires-root-to-binary-targets.name=Set Rules-Requires-Root field to "binary-targets"
deb822.files.quickfix.fields.source-add-rules-requires-root-to-binary-targets.description=Adds a Rules-Requires-Root field and set it to "binary-targets".  This is the legacy model for building packages (made explicit rather than implicit).  This is mostly useful if the package relies on (fake)root during the "binary" targets ("binary", "binary-arch" or "binary-indep").  It is still necessary for cases where the package uses static ownership with non-root user or group (e.g. "chown www-data:www-data some/file")


deb822.files.annotator.fields.paths-in-files-field-must-match-files=The path {0} is a directory but Files fields must always point to files.  If you want to match the entire directory, then please end the path with a wildcard to match everything in that directory.
deb822.files.quickfix.fields.paths-in-files-field-must-match-files.name=End path with a wildcard
deb822.files.quickfix.fields.paths-in-files-field-must-match-files.description=The paths in Files must always match files and not directories. If everything in a directory should be matched, then end the directory with a wildcard.

deb822.files.annotator.fields.path-in-files-field-does-not-match-anything=The path {0} does not match an existing file.
deb822.files.annotator.fields.path-in-files-field-used-as-dir-but-is-not=The path {0} does not match an existing file.  The sub path {1} is denoted as a directory, but the last segment is not a directory.
deb822.files.annotator.fields.path-in-files-field-does-not-match-anything-after-x=The path {0} does not match an existing file. The first part up to and including the directory {1} does exist. However, that directory does not contain anything named {2}.

deb822.files.annotator.fields.files-pattern-double-star-not-supported=The "**" pattern is not supported in Files as a "*" already matches any number of any character (including /).  Using a single "*" is therefore sufficient.
deb822.files.annotator.fields.files-pattern-invalid-escape-sequence=Only "*", "?" and "\\" can be escaped.

deb822.files.annotator.fields.whitespace-only-continuation-line=Invalid continuation line.  Empty continuation lines must be encoded as " ." (i.e. space + period).
deb822.files.quickfix.fields.whitespace-only-continuation-line.description=The deb822 format does not support whitespace-only lines for continuing field values.

deb822.files.quickfix.fields.whitespace-only-continuation-line-insert-dotspace.name=Correction continuation line (using " .").
deb822.files.quickfix.fields.whitespace-only-continuation-line-remove.name=Remove empty lines

