// Copyright 2000-2020 JetBrains s.r.o. and other contributors. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file.
{
  parserClass="com.github.nthykier.debpkg.deb822.parser.Deb822Parser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Deb822"
  psiImplClassSuffix="Impl"
  psiPackage="com.github.nthykier.debpkg.deb822.psi"
  psiImplPackage="com.github.nthykier.debpkg.deb822.psi.impl"
  psiImplUtilClass="com.github.nthykier.debpkg.deb822.psi.impl.Deb822PsiImplUtil"

  elementTypeHolderClass="com.github.nthykier.debpkg.deb822.psi.Deb822Types"
  elementTypeClass="com.github.nthykier.debpkg.deb822.psi.Deb822ElementType"
  tokenTypeClass="com.github.nthykier.debpkg.deb822.psi.Deb822TokenType"

  name("value_parts")="Value or Substvars"

  tokens = [
      NEGATION='!'
      ANGLE_BRACKET_OPEN='<'
      ANGLE_BRACKET_CLOSE='>'
  ]
}

deb822file ::= COMMENT* gpg_signed? all_paragraphs gpg_signature? COMMENT*

all_paragraphs ::= paragraph (COMMENT* paragraph)*
paragraph ::= field_value_pair (COMMENT* field_value_pair)* (PARAGRAPH_FINISH|<<eof>>) {
  extends="com.github.nthykier.debpkg.deb822.psi.impl.AbstractDeb822Paragraph"
  implements="com.github.nthykier.debpkg.deb822.psi.Deb822ParagraphSupport"
}

gpg_signed ::= GPG_BEGIN_SIGNED_MESSAGE armor_headers {
  pin=1
}

gpg_signature ::= GPG_BEGIN_SIGNATURE armor_headers gpg_signature_blob GPG_END_SIGNATURE {
  pin=1
  recoverWhile=recover_signature
}

private armor_headers ::= GPG_ARMOR_HEADER* GPG_ARMOR_HEADERS_END {
}

private gpg_signature_blob ::= GPG_SIGNATURE_BLOB_PART*


field_value_pair ::= field SEPARATOR value_parts {
  pin=2
/*  extends="com.github.nthykier.debpkg.deb822.psi.impl.Deb822FieldValueElementImpl" */
  implements="com.intellij.psi.ContributedReferenceHost"
  recoverWhile=recover_property
  //methods=[getFieldName getFieldValue getName setName getNameIdentifier getPresentation]
    methods=[getReferences getFieldValue]
}

field ::= FIELD_NAME {
  extends="com.github.nthykier.debpkg.deb822.psi.impl.AbstractDeb822Field"
  implements="com.github.nthykier.debpkg.deb822.psi.Deb822FieldBase"
}

value_parts ::= ignorable_value_noise? (value|substvar|COMMA) (ignorable_value_noise|value|substvar|COMMA)*
              | ignorable_value_noise? build_profile_group+ ignorable_value_noise? {
  extends="com.github.nthykier.debpkg.deb822.psi.impl.AbstractDeb822ValueParts"
}

build_profile_group ::= ('<' ignorable_value_noise? build_profile (ignorable_value_noise|build_profile)* '>')

build_profile ::= '!'? BUILD_PROFILE_TOKEN {
  methods=[getProfileName getProfileNameNode isNegated]
}

private ignorable_value_noise ::= (COMMENT | hanging_cont_value)+

// Here for the Deb822Annotator
hanging_cont_value ::= HANGING_CONT_VALUE_TOKEN;

value ::= VALUE_TOKEN {
  extends="com.github.nthykier.debpkg.deb822.psi.impl.AbstractDeb822Value"
}

substvar ::= SUBSTVAR_TOKEN {
  implements="com.github.nthykier.debpkg.deb822.psi.Deb822SubstvarBase"
  methods=[getReference]
}

private recover_property ::= !(FIELD_NAME|SEPARATOR|SUBSTVAR_TOKEN|VALUE_TOKEN|COMMA|COMMENT|PARAGRAPH_FINISH)

private recover_signature ::= !(GPG_ARMOR_HEADERS_END|GPG_SIGNATURE_BLOB_PART|GPG_END_SIGNATURE)
